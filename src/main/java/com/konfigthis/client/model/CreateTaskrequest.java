/*
 * ClickUp API Reference
 * This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CustomFields6;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CreateTaskrequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CreateTaskrequest {
  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ASSIGNEES = "assignees";
  @SerializedName(SERIALIZED_NAME_ASSIGNEES)
  private List<Integer> assignees = null;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Object priority = null;

  public static final String SERIALIZED_NAME_DUE_DATE = "due_date";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private Integer dueDate;

  public static final String SERIALIZED_NAME_DUE_DATE_TIME = "due_date_time";
  @SerializedName(SERIALIZED_NAME_DUE_DATE_TIME)
  private Boolean dueDateTime;

  public static final String SERIALIZED_NAME_TIME_ESTIMATE = "time_estimate";
  @SerializedName(SERIALIZED_NAME_TIME_ESTIMATE)
  private Integer timeEstimate;

  public static final String SERIALIZED_NAME_START_DATE = "start_date";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private Integer startDate;

  public static final String SERIALIZED_NAME_START_DATE_TIME = "start_date_time";
  @SerializedName(SERIALIZED_NAME_START_DATE_TIME)
  private Boolean startDateTime;

  public static final String SERIALIZED_NAME_NOTIFY_ALL = "notify_all";
  @SerializedName(SERIALIZED_NAME_NOTIFY_ALL)
  private Boolean notifyAll;

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @SerializedName(SERIALIZED_NAME_PARENT)
  private Object parent = null;

  public static final String SERIALIZED_NAME_LINKS_TO = "links_to";
  @SerializedName(SERIALIZED_NAME_LINKS_TO)
  private Object linksTo = null;

  public static final String SERIALIZED_NAME_CHECK_REQUIRED_CUSTOM_FIELDS = "check_required_custom_fields";
  @SerializedName(SERIALIZED_NAME_CHECK_REQUIRED_CUSTOM_FIELDS)
  private Boolean checkRequiredCustomFields;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<CustomFields6> customFields = null;

  public static final String SERIALIZED_NAME_CUSTOM_ITEM_ID = "custom_item_id";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ITEM_ID)
  private Double customItemId;

  public CreateTaskrequest() {
  }

  public CreateTaskrequest tags(List<String> tags) {
    
    
    
    
    this.tags = tags;
    return this;
  }

  public CreateTaskrequest addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * 
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    
    
    
    this.tags = tags;
  }


  public CreateTaskrequest description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "New Task Description", value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public CreateTaskrequest name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "New Task Name", required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public CreateTaskrequest assignees(List<Integer> assignees) {
    
    
    
    
    this.assignees = assignees;
    return this;
  }

  public CreateTaskrequest addAssigneesItem(Integer assigneesItem) {
    if (this.assignees == null) {
      this.assignees = new ArrayList<>();
    }
    this.assignees.add(assigneesItem);
    return this;
  }

   /**
   * 
   * @return assignees
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getAssignees() {
    return assignees;
  }


  public void setAssignees(List<Integer> assignees) {
    
    
    
    this.assignees = assignees;
  }


  public CreateTaskrequest status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Open", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public CreateTaskrequest priority(Object priority) {
    
    
    
    
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPriority() {
    return priority;
  }


  public void setPriority(Object priority) {
    
    
    
    this.priority = priority;
  }


  public CreateTaskrequest dueDate(Integer dueDate) {
    
    
    
    
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1508369194377", value = "")

  public Integer getDueDate() {
    return dueDate;
  }


  public void setDueDate(Integer dueDate) {
    
    
    
    this.dueDate = dueDate;
  }


  public CreateTaskrequest dueDateTime(Boolean dueDateTime) {
    
    
    
    
    this.dueDateTime = dueDateTime;
    return this;
  }

   /**
   * Get dueDateTime
   * @return dueDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getDueDateTime() {
    return dueDateTime;
  }


  public void setDueDateTime(Boolean dueDateTime) {
    
    
    
    this.dueDateTime = dueDateTime;
  }


  public CreateTaskrequest timeEstimate(Integer timeEstimate) {
    
    
    
    
    this.timeEstimate = timeEstimate;
    return this;
  }

   /**
   * Get timeEstimate
   * @return timeEstimate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8640000", value = "")

  public Integer getTimeEstimate() {
    return timeEstimate;
  }


  public void setTimeEstimate(Integer timeEstimate) {
    
    
    
    this.timeEstimate = timeEstimate;
  }


  public CreateTaskrequest startDate(Integer startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1567780450202", value = "")

  public Integer getStartDate() {
    return startDate;
  }


  public void setStartDate(Integer startDate) {
    
    
    
    this.startDate = startDate;
  }


  public CreateTaskrequest startDateTime(Boolean startDateTime) {
    
    
    
    
    this.startDateTime = startDateTime;
    return this;
  }

   /**
   * Get startDateTime
   * @return startDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getStartDateTime() {
    return startDateTime;
  }


  public void setStartDateTime(Boolean startDateTime) {
    
    
    
    this.startDateTime = startDateTime;
  }


  public CreateTaskrequest notifyAll(Boolean notifyAll) {
    
    
    
    
    this.notifyAll = notifyAll;
    return this;
  }

   /**
   * If &#x60;notify_all&#x60; is true, notifications will be sent to everyone including the creator of the comment.
   * @return notifyAll
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.")

  public Boolean getNotifyAll() {
    return notifyAll;
  }


  public void setNotifyAll(Boolean notifyAll) {
    
    
    
    this.notifyAll = notifyAll;
  }


  public CreateTaskrequest parent(Object parent) {
    
    
    
    
    this.parent = parent;
    return this;
  }

   /**
   * You can create a subtask by including an existing task ID.\\  \\ The &#x60;parent&#x60; task ID you include cannot be a subtask, and must be in the same List specified in the path parameter.
   * @return parent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "You can create a subtask by including an existing task ID.\\  \\ The `parent` task ID you include cannot be a subtask, and must be in the same List specified in the path parameter.")

  public Object getParent() {
    return parent;
  }


  public void setParent(Object parent) {
    
    
    
    this.parent = parent;
  }


  public CreateTaskrequest linksTo(Object linksTo) {
    
    
    
    
    this.linksTo = linksTo;
    return this;
  }

   /**
   * Include a task ID to create a linked dependency with your new task.
   * @return linksTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Include a task ID to create a linked dependency with your new task.")

  public Object getLinksTo() {
    return linksTo;
  }


  public void setLinksTo(Object linksTo) {
    
    
    
    this.linksTo = linksTo;
  }


  public CreateTaskrequest checkRequiredCustomFields(Boolean checkRequiredCustomFields) {
    
    
    
    
    this.checkRequiredCustomFields = checkRequiredCustomFields;
    return this;
  }

   /**
   * When creating a task via API any required Custom Fields are ignored by default (&#x60;false&#x60;).\\  \\ You can enforce required Custom Fields by including &#x60;check_required_custom_fields: true&#x60;.
   * @return checkRequiredCustomFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "When creating a task via API any required Custom Fields are ignored by default (`false`).\\  \\ You can enforce required Custom Fields by including `check_required_custom_fields: true`.")

  public Boolean getCheckRequiredCustomFields() {
    return checkRequiredCustomFields;
  }


  public void setCheckRequiredCustomFields(Boolean checkRequiredCustomFields) {
    
    
    
    this.checkRequiredCustomFields = checkRequiredCustomFields;
  }


  public CreateTaskrequest customFields(List<CustomFields6> customFields) {
    
    
    
    
    this.customFields = customFields;
    return this;
  }

  public CreateTaskrequest addCustomFieldsItem(CustomFields6 customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

   /**
   * [Filter by Custom Fields.](https://clickup.com/api)
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "[Filter by Custom Fields.](https://clickup.com/api)")

  public List<CustomFields6> getCustomFields() {
    return customFields;
  }


  public void setCustomFields(List<CustomFields6> customFields) {
    
    
    
    this.customFields = customFields;
  }


  public CreateTaskrequest customItemId(Double customItemId) {
    
    
    
    
    this.customItemId = customItemId;
    return this;
  }

  public CreateTaskrequest customItemId(Integer customItemId) {
    
    
    
    
    this.customItemId = customItemId.doubleValue();
    return this;
  }

   /**
   * To create a task that doesn&#39;t use a custom task type, either don&#39;t include this field in the request body, or send &#x60;&#39;null&#39;&#x60;. \\  \\ To create this task as a Milestone, send a value of &#x60;1&#x60;.\\  \\ To use a custom task type, send the custom task type ID as defined in your Workspace, such as &#x60;2&#x60;.
   * @return customItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "To create a task that doesn't use a custom task type, either don't include this field in the request body, or send `'null'`. \\  \\ To create this task as a Milestone, send a value of `1`.\\  \\ To use a custom task type, send the custom task type ID as defined in your Workspace, such as `2`.")

  public Double getCustomItemId() {
    return customItemId;
  }


  public void setCustomItemId(Double customItemId) {
    
    
    
    this.customItemId = customItemId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CreateTaskrequest instance itself
   */
  public CreateTaskrequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTaskrequest createTaskrequest = (CreateTaskrequest) o;
    return Objects.equals(this.tags, createTaskrequest.tags) &&
        Objects.equals(this.description, createTaskrequest.description) &&
        Objects.equals(this.name, createTaskrequest.name) &&
        Objects.equals(this.assignees, createTaskrequest.assignees) &&
        Objects.equals(this.status, createTaskrequest.status) &&
        Objects.equals(this.priority, createTaskrequest.priority) &&
        Objects.equals(this.dueDate, createTaskrequest.dueDate) &&
        Objects.equals(this.dueDateTime, createTaskrequest.dueDateTime) &&
        Objects.equals(this.timeEstimate, createTaskrequest.timeEstimate) &&
        Objects.equals(this.startDate, createTaskrequest.startDate) &&
        Objects.equals(this.startDateTime, createTaskrequest.startDateTime) &&
        Objects.equals(this.notifyAll, createTaskrequest.notifyAll) &&
        Objects.equals(this.parent, createTaskrequest.parent) &&
        Objects.equals(this.linksTo, createTaskrequest.linksTo) &&
        Objects.equals(this.checkRequiredCustomFields, createTaskrequest.checkRequiredCustomFields) &&
        Objects.equals(this.customFields, createTaskrequest.customFields) &&
        Objects.equals(this.customItemId, createTaskrequest.customItemId)&&
        Objects.equals(this.additionalProperties, createTaskrequest.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(tags, description, name, assignees, status, priority, dueDate, dueDateTime, timeEstimate, startDate, startDateTime, notifyAll, parent, linksTo, checkRequiredCustomFields, customFields, customItemId, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTaskrequest {\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    assignees: ").append(toIndentedString(assignees)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    dueDateTime: ").append(toIndentedString(dueDateTime)).append("\n");
    sb.append("    timeEstimate: ").append(toIndentedString(timeEstimate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    startDateTime: ").append(toIndentedString(startDateTime)).append("\n");
    sb.append("    notifyAll: ").append(toIndentedString(notifyAll)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    linksTo: ").append(toIndentedString(linksTo)).append("\n");
    sb.append("    checkRequiredCustomFields: ").append(toIndentedString(checkRequiredCustomFields)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    customItemId: ").append(toIndentedString(customItemId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("tags");
    openapiFields.add("description");
    openapiFields.add("name");
    openapiFields.add("assignees");
    openapiFields.add("status");
    openapiFields.add("priority");
    openapiFields.add("due_date");
    openapiFields.add("due_date_time");
    openapiFields.add("time_estimate");
    openapiFields.add("start_date");
    openapiFields.add("start_date_time");
    openapiFields.add("notify_all");
    openapiFields.add("parent");
    openapiFields.add("links_to");
    openapiFields.add("check_required_custom_fields");
    openapiFields.add("custom_fields");
    openapiFields.add("custom_item_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CreateTaskrequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CreateTaskrequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateTaskrequest is not found in the empty JSON string", CreateTaskrequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateTaskrequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("assignees") != null && !jsonObj.get("assignees").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `assignees` to be an array in the JSON string but got `%s`", jsonObj.get("assignees").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("custom_fields") != null && !jsonObj.get("custom_fields").isJsonNull()) {
        JsonArray jsonArraycustomFields = jsonObj.getAsJsonArray("custom_fields");
        if (jsonArraycustomFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("custom_fields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `custom_fields` to be an array in the JSON string but got `%s`", jsonObj.get("custom_fields").toString()));
          }

          // validate the optional field `custom_fields` (array)
          for (int i = 0; i < jsonArraycustomFields.size(); i++) {
            CustomFields6.validateJsonObject(jsonArraycustomFields.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateTaskrequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateTaskrequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateTaskrequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateTaskrequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateTaskrequest>() {
           @Override
           public void write(JsonWriter out, CreateTaskrequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateTaskrequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CreateTaskrequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreateTaskrequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreateTaskrequest
  * @throws IOException if the JSON string is invalid with respect to CreateTaskrequest
  */
  public static CreateTaskrequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateTaskrequest.class);
  }

 /**
  * Convert an instance of CreateTaskrequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

