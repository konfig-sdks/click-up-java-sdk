/*
 * ClickUp API Reference
 * This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateChecklistItemrequest;
import com.konfigthis.client.model.CreateChecklistItemresponse;
import com.konfigthis.client.model.CreateChecklistrequest;
import com.konfigthis.client.model.CreateChecklistresponse;
import com.konfigthis.client.model.EditChecklistItemrequest;
import com.konfigthis.client.model.EditChecklistItemresponse;
import com.konfigthis.client.model.EditChecklistrequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskChecklistsApi
 */
@Disabled
public class TaskChecklistsApiTest {

    private static TaskChecklistsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TaskChecklistsApi(apiClient);
    }

    /**
     * Create Checklist Item
     *
     * Add a line item to a task checklist.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addLineItemTest() throws ApiException {
        String checklistId = null;
        String name = null;
        Integer assignee = null;
        CreateChecklistItemresponse response = api.addLineItem(checklistId)
                .name(name)
                .assignee(assignee)
                .execute();
        // TODO: test validations
    }

    /**
     * Create Checklist
     *
     * Add a new checklist to a task.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewChecklistTest() throws ApiException {
        String name = null;
        String taskId = null;
        Boolean customTaskIds = null;
        Double teamId = null;
        CreateChecklistresponse response = api.createNewChecklist(name, taskId)
                .customTaskIds(customTaskIds)
                .teamId(teamId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Checklist
     *
     * Delete a checklist from a task.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeChecklistTest() throws ApiException {
        String checklistId = null;
        Object response = api.removeChecklist(checklistId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Checklist Item
     *
     * Delete a line item from a task checklist.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeChecklistItemTest() throws ApiException {
        String checklistId = null;
        String checklistItemId = null;
        Object response = api.removeChecklistItem(checklistId, checklistItemId)
                .execute();
        // TODO: test validations
    }

    /**
     * Edit Checklist
     *
     * Rename a task checklist, or reorder a checklist so it appears above or below other checklists on a task.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateChecklistTest() throws ApiException {
        String checklistId = null;
        String name = null;
        Integer position = null;
        Object response = api.updateChecklist(checklistId)
                .name(name)
                .position(position)
                .execute();
        // TODO: test validations
    }

    /**
     * Edit Checklist Item
     *
     * Update an individual line item in a task checklist. \\  \\ You can rename it, set the assignee, mark it as resolved, or nest it under another checklist item.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateChecklistItemTest() throws ApiException {
        String checklistId = null;
        String checklistItemId = null;
        String name = null;
        Object assignee = null;
        Boolean resolved = null;
        Object parent = null;
        EditChecklistItemresponse response = api.updateChecklistItem(checklistId, checklistItemId)
                .name(name)
                .assignee(assignee)
                .resolved(resolved)
                .parent(parent)
                .execute();
        // TODO: test validations
    }

}
