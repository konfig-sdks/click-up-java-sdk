/*
 * ClickUp API Reference
 * This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateFolderrequest;
import com.konfigthis.client.model.CreateFolderresponse;
import com.konfigthis.client.model.GetFolderresponse;
import com.konfigthis.client.model.GetFoldersresponse;
import com.konfigthis.client.model.UpdateFolderrequest;
import com.konfigthis.client.model.UpdateFolderresponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FoldersApi
 */
@Disabled
public class FoldersApiTest {

    private static FoldersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new FoldersApi(apiClient);
    }

    /**
     * Create Folder
     *
     * Add a new Folder to a Space.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewFolderTest() throws ApiException {
        String name = null;
        Double spaceId = null;
        CreateFolderresponse response = api.createNewFolder(name, spaceId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Folders
     *
     * View the Folders in a Space.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContentsOfTest() throws ApiException {
        Double spaceId = null;
        Boolean archived = null;
        GetFoldersresponse response = api.getContentsOf(spaceId)
                .archived(archived)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Folder
     *
     * View the Lists within a Folder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFolderContentTest() throws ApiException {
        Double folderId = null;
        GetFolderresponse response = api.getFolderContent(folderId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Folder
     *
     * Delete a Folder from your Workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeFolderTest() throws ApiException {
        Double folderId = null;
        Object response = api.removeFolder(folderId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Folder
     *
     * Rename a Folder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void renameFolderTest() throws ApiException {
        String name = null;
        Double folderId = null;
        UpdateFolderresponse response = api.renameFolder(name, folderId)
                .execute();
        // TODO: test validations
    }

}
