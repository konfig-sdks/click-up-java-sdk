/*
 * ClickUp API Reference
 * This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateTeamrequest;
import com.konfigthis.client.model.CreateTeamresponse;
import com.konfigthis.client.model.GetTeamsresponse;
import com.konfigthis.client.model.Members2;
import com.konfigthis.client.model.UpdateTeamrequest;
import com.konfigthis.client.model.UpdateTeamresponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TeamsUserGroupsApi
 */
@Disabled
public class TeamsUserGroupsApiTest {

    private static TeamsUserGroupsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TeamsUserGroupsApi(apiClient);
    }

    /**
     * Create Team
     *
     * This endpoint is used to create [Teams: user groups](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) which are groups of users you can assign items to in your Workspace.\\  \\ In our API documentation, &#x60;team_id&#x60; refers to the id of a Workspace, and &#x60;group_id&#x60; refers to the id of a user group.\\  \\ **Note:** Adding a guest with view only permissions to a Team automatically converts them to a paid guest.\\  \\ If you don&#39;t have any paid guest seats available, a new member seat is automatically added to increase the number of paid guest seats available.\\  \\ This incurs a prorated charge based on your billing cycle.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTeamTest() throws ApiException {
        String name = null;
        List<Integer> members = null;
        Double teamId = null;
        CreateTeamresponse response = api.createTeam(name, members, teamId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Teams
     *
     * This endpoint is used to view [Teams: user groups](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) in your Workspace.\\  \\ In our API documentation, &#x60;team_id&#x60; refers to the id of a Workspace, and &#x60;group_id&#x60; refers to the id of a user group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserGroupsTest() throws ApiException {
        Double teamId = null;
        String groupIds = null;
        GetTeamsresponse response = api.getUserGroups()
                .teamId(teamId)
                .groupIds(groupIds)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Team
     *
     * This endpoint is used to remove a [Team: user group](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) from your Workspace.\\  \\ In our API documentation, &#x60;team_id&#x60; refers to the id of a Workspace, and &#x60;group_id&#x60; refers to the id of a user group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeGroupTest() throws ApiException {
        String groupId = null;
        Object response = api.removeGroup(groupId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Team
     *
     * This endpoint is used to manage [Teams: user groups](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) which are groups of users you can assign items to in your Workspace.\\  \\ In our API documentation, &#x60;team_id&#x60; refers to the id of a Workspace, and &#x60;group_id&#x60; refers to the id of a user group.\\  \\ **Note:** Adding a guest with view only permissions to a Team automatically converts them to a paid guest.\\  \\ If you don&#39;t have any paid guest seats available, a new member seat is automatically added to increase the number of paid guest seats available.\\  \\ This incurs a prorated charge based on your billing cycle.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateUserGroupTest() throws ApiException {
        String groupId = null;
        String name = null;
        String handle = null;
        Members2 members = null;
        UpdateTeamresponse response = api.updateUserGroup(groupId)
                .name(name)
                .handle(handle)
                .members(members)
                .execute();
        // TODO: test validations
    }

}
