/*
 * ClickUp API Reference
 * This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateGoalrequest;
import com.konfigthis.client.model.CreateGoalresponse;
import com.konfigthis.client.model.CreateKeyResultrequest;
import com.konfigthis.client.model.CreateKeyResultresponse;
import com.konfigthis.client.model.EditKeyResultrequest;
import com.konfigthis.client.model.EditKeyResultresponse;
import com.konfigthis.client.model.GetGoalresponse;
import com.konfigthis.client.model.GetGoalsresponse;
import com.konfigthis.client.model.UpdateGoalrequest;
import com.konfigthis.client.model.UpdateGoalresponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GoalsApi
 */
@Disabled
public class GoalsApiTest {

    private static GoalsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new GoalsApi(apiClient);
    }

    /**
     * Create Key Result
     *
     * Add a Target to a Goal.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addKeyResultTest() throws ApiException {
        String name = null;
        List<Integer> owners = null;
        String type = null;
        Integer stepsStart = null;
        Integer stepsEnd = null;
        String unit = null;
        List<String> taskIds = null;
        List<String> listIds = null;
        String goalId = null;
        CreateKeyResultresponse response = api.addKeyResult(name, owners, type, stepsStart, stepsEnd, unit, taskIds, listIds, goalId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create Goal
     *
     * Add a new Goal to a Workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewGoalToWorkspaceTest() throws ApiException {
        String description = null;
        String name = null;
        Integer dueDate = null;
        Boolean multipleOwners = null;
        List<Integer> owners = null;
        String color = null;
        Double teamId = null;
        CreateGoalresponse response = api.addNewGoalToWorkspace(description, name, dueDate, multipleOwners, owners, color, teamId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Goal
     *
     * View the details of a Goal including its Targets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetailsTest() throws ApiException {
        String goalId = null;
        GetGoalresponse response = api.getDetails(goalId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Goals
     *
     * View the Goals available in a Workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkspaceGoalsTest() throws ApiException {
        Double teamId = null;
        Boolean includeCompleted = null;
        GetGoalsresponse response = api.getWorkspaceGoals(teamId)
                .includeCompleted(includeCompleted)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Goal
     *
     * Remove a Goal from your Workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeGoalTest() throws ApiException {
        String goalId = null;
        Object response = api.removeGoal(goalId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Key Result
     *
     * Delete a target from a Goal.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeTargetTest() throws ApiException {
        String keyResultId = null;
        Object response = api.removeTarget(keyResultId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Goal
     *
     * Rename a Goal, set the due date, replace the description, add or remove owners, and set the Goal color.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGoalDetailsTest() throws ApiException {
        String description = null;
        String name = null;
        Integer dueDate = null;
        List<Integer> remOwners = null;
        List<Integer> addOwners = null;
        String color = null;
        String goalId = null;
        UpdateGoalresponse response = api.updateGoalDetails(description, name, dueDate, remOwners, addOwners, color, goalId)
                .execute();
        // TODO: test validations
    }

    /**
     * Edit Key Result
     *
     * Update a Target.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateKeyResultTest() throws ApiException {
        Integer stepsCurrent = null;
        String note = null;
        String keyResultId = null;
        EditKeyResultresponse response = api.updateKeyResult(stepsCurrent, note, keyResultId)
                .execute();
        // TODO: test validations
    }

}
