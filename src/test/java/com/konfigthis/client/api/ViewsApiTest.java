/*
 * ClickUp API Reference
 * This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Columns;
import com.konfigthis.client.model.CreateFolderViewrequest;
import com.konfigthis.client.model.CreateFolderViewresponse;
import com.konfigthis.client.model.CreateListViewrequest;
import com.konfigthis.client.model.CreateListViewresponse;
import com.konfigthis.client.model.CreateSpaceViewrequest;
import com.konfigthis.client.model.CreateSpaceViewresponse;
import com.konfigthis.client.model.CreateTeamViewrequest;
import com.konfigthis.client.model.CreateTeamViewresponse;
import com.konfigthis.client.model.Divide;
import com.konfigthis.client.model.Filters;
import com.konfigthis.client.model.GetFolderViewsresponse;
import com.konfigthis.client.model.GetListViewsresponse;
import com.konfigthis.client.model.GetSpaceViewsresponse;
import com.konfigthis.client.model.GetTeamViewsresponse;
import com.konfigthis.client.model.GetViewTasksresponse;
import com.konfigthis.client.model.GetViewresponse;
import com.konfigthis.client.model.Grouping;
import com.konfigthis.client.model.Parent;
import com.konfigthis.client.model.Settings;
import com.konfigthis.client.model.Sorting;
import com.konfigthis.client.model.TeamSidebar;
import com.konfigthis.client.model.UpdateViewrequest;
import com.konfigthis.client.model.UpdateViewresponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ViewsApi
 */
@Disabled
public class ViewsApiTest {

    private static ViewsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ViewsApi(apiClient);
    }

    /**
     * Create Folder View
     *
     * Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view to a Folder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addViewToFolderTest() throws ApiException {
        String name = null;
        String type = null;
        Grouping grouping = null;
        Divide divide = null;
        Sorting sorting = null;
        Filters filters = null;
        Columns columns = null;
        TeamSidebar teamSidebar = null;
        Settings settings = null;
        Double folderId = null;
        CreateFolderViewresponse response = api.addViewToFolder(name, type, grouping, divide, sorting, filters, columns, teamSidebar, settings, folderId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create List View
     *
     * Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view to a List.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addViewToListTest() throws ApiException {
        String name = null;
        String type = null;
        Grouping grouping = null;
        Divide divide = null;
        Sorting sorting = null;
        Filters filters = null;
        Columns columns = null;
        TeamSidebar teamSidebar = null;
        Settings settings = null;
        Double listId = null;
        CreateListViewresponse response = api.addViewToList(name, type, grouping, divide, sorting, filters, columns, teamSidebar, settings, listId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create Space View
     *
     * Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view to a Space.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addViewToSpaceTest() throws ApiException {
        String name = null;
        String type = null;
        Grouping grouping = null;
        Divide divide = null;
        Sorting sorting = null;
        Filters filters = null;
        Columns columns = null;
        TeamSidebar teamSidebar = null;
        Settings settings = null;
        Double spaceId = null;
        CreateSpaceViewresponse response = api.addViewToSpace(name, type, grouping, divide, sorting, filters, columns, teamSidebar, settings, spaceId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create Workspace (Everything level) View
     *
     * Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view at the Everything Level of a Workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWorkspaceViewEverythingLevelTest() throws ApiException {
        String name = null;
        String type = null;
        Grouping grouping = null;
        Divide divide = null;
        Sorting sorting = null;
        Filters filters = null;
        Columns columns = null;
        TeamSidebar teamSidebar = null;
        Settings settings = null;
        Double teamId = null;
        CreateTeamViewresponse response = api.createWorkspaceViewEverythingLevel(name, type, grouping, divide, sorting, filters, columns, teamSidebar, settings, teamId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete View
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteViewByIdTest() throws ApiException {
        String viewId = null;
        Object response = api.deleteViewById(viewId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Folder Views
     *
     * View the task and page views available for a Folder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void folderViewsGetTest() throws ApiException {
        Double folderId = null;
        GetFolderViewsresponse response = api.folderViewsGet(folderId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Workspace (Everything level) Views
     *
     * View the task and page views available at the Everything Level of a Workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEverythingLevelTest() throws ApiException {
        Double teamId = null;
        GetTeamViewsresponse response = api.getEverythingLevel(teamId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get List Views
     *
     * View the task and page views available for a List.&lt;br&gt; Views and required views are separate responses.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListViewsTest() throws ApiException {
        Double listId = null;
        GetListViewsresponse response = api.getListViews(listId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get View Tasks
     *
     * See all visible tasks in a view in ClickUp.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTasksInViewTest() throws ApiException {
        String viewId = null;
        Integer page = null;
        GetViewTasksresponse response = api.getTasksInView(viewId, page)
                .execute();
        // TODO: test validations
    }

    /**
     * Get View
     *
     * View information about a specific task or page view.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getViewInfoTest() throws ApiException {
        String viewId = null;
        GetViewresponse response = api.getViewInfo(viewId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Space Views
     *
     * View the task and page views available for a Space.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void spaceViewsGetTest() throws ApiException {
        Double spaceId = null;
        GetSpaceViewsresponse response = api.spaceViewsGet(spaceId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update View
     *
     * Rename a view, update the grouping, sorting, filters, columns, and settings of a view.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateViewDetailsTest() throws ApiException {
        String name = null;
        String type = null;
        Parent parent = null;
        Grouping grouping = null;
        Divide divide = null;
        Sorting sorting = null;
        Filters filters = null;
        Columns columns = null;
        TeamSidebar teamSidebar = null;
        Settings settings = null;
        String viewId = null;
        UpdateViewresponse response = api.updateViewDetails(name, type, parent, grouping, divide, sorting, filters, columns, teamSidebar, settings, viewId)
                .execute();
        // TODO: test validations
    }

}
