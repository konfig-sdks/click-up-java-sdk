/*
 * ClickUp API Reference
 * This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateChatViewCommentrequest;
import com.konfigthis.client.model.CreateChatViewCommentresponse;
import com.konfigthis.client.model.CreateListCommentrequest;
import com.konfigthis.client.model.CreateListCommentresponse;
import com.konfigthis.client.model.CreateTaskCommentrequest;
import com.konfigthis.client.model.CreateTaskCommentresponse;
import com.konfigthis.client.model.GetChatViewCommentsresponse;
import com.konfigthis.client.model.GetListCommentsresponse;
import com.konfigthis.client.model.GetTaskCommentsresponse;
import com.konfigthis.client.model.UpdateCommentrequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CommentsApi
 */
@Disabled
public class CommentsApiTest {

    private static CommentsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CommentsApi(apiClient);
    }

    /**
     * Create List Comment
     *
     * Add a comment to a List.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addToListCommentTest() throws ApiException {
        String commentText = null;
        Integer assignee = null;
        Boolean notifyAll = null;
        Double listId = null;
        CreateListCommentresponse response = api.addToListComment(commentText, assignee, notifyAll, listId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create Chat View Comment
     *
     * Add a new comment to a Chat view.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createChatViewCommentTest() throws ApiException {
        String commentText = null;
        Boolean notifyAll = null;
        String viewId = null;
        CreateChatViewCommentresponse response = api.createChatViewComment(commentText, notifyAll, viewId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create Task Comment
     *
     * Add a new comment to a task.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewTaskCommentTest() throws ApiException {
        String commentText = null;
        Integer assignee = null;
        Boolean notifyAll = null;
        String taskId = null;
        Boolean customTaskIds = null;
        Double teamId = null;
        CreateTaskCommentresponse response = api.createNewTaskComment(commentText, assignee, notifyAll, taskId)
                .customTaskIds(customTaskIds)
                .teamId(teamId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Comment
     *
     * Delete a task comment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTaskCommentTest() throws ApiException {
        Double commentId = null;
        Object response = api.deleteTaskComment(commentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get List Comments
     *
     * View the comments added to a List. \\  \\ If you do not include the &#x60;start&#x60; and &#x60;start_id&#x60; parameters, this endpoint will return the most recent 25 comments.\\  \\ Use the &#x60;start&#x60; and &#x60;start id&#x60; parameters of the oldest comment to retrieve the next 25 comments.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListCommentsTest() throws ApiException {
        Double listId = null;
        Integer start = null;
        String startId = null;
        GetListCommentsresponse response = api.getListComments(listId)
                .start(start)
                .startId(startId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Task Comments
     *
     * View task comments. \\  \\ If you do not include the &#x60;start&#x60; and &#x60;start_id&#x60; parameters, this endpoint will return the most recent 25 comments.\\  \\ Use the &#x60;start&#x60; and &#x60;start id&#x60; parameters of the oldest comment to retrieve the next 25 comments.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTaskCommentsTest() throws ApiException {
        String taskId = null;
        Boolean customTaskIds = null;
        Double teamId = null;
        Integer start = null;
        String startId = null;
        GetTaskCommentsresponse response = api.getTaskComments(taskId)
                .customTaskIds(customTaskIds)
                .teamId(teamId)
                .start(start)
                .startId(startId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Chat View Comments
     *
     * View comments from a Chat view. \\  \\ If you do not include the &#x60;start&#x60; and &#x60;start_id&#x60; parameters, this endpoint will return the most recent 25 comments.\\  \\ Use the &#x60;start&#x60; and &#x60;start id&#x60; parameters of the oldest comment to retrieve the next 25 comments.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getViewCommentsTest() throws ApiException {
        String viewId = null;
        Integer start = null;
        String startId = null;
        GetChatViewCommentsresponse response = api.getViewComments(viewId)
                .start(start)
                .startId(startId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Comment
     *
     * Replace the content of a task commment, assign a comment, and mark a comment as resolved.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTaskCommentTest() throws ApiException {
        String commentText = null;
        Integer assignee = null;
        Boolean resolved = null;
        Double commentId = null;
        Object response = api.updateTaskComment(commentText, assignee, resolved, commentId)
                .execute();
        // TODO: test validations
    }

}
