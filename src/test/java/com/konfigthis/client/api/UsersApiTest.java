/*
 * ClickUp API Reference
 * This is the ClickUp API Reference where you can learn about specific endpoints and parameters in detail.  Browse the available endpoints using the sidebar on the left.  **Not sure where to begin?** [Get Started with the ClickUp API](https://clickup.com/api) 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.EditUserOnWorkspacerequest;
import com.konfigthis.client.model.EditUserOnWorkspaceresponse;
import com.konfigthis.client.model.GetUserresponse;
import com.konfigthis.client.model.InviteUserToWorkspacerequest;
import com.konfigthis.client.model.InviteUserToWorkspaceresponse;
import com.konfigthis.client.model.RemoveUserFromWorkspaceresponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Disabled
public class UsersApiTest {

    private static UsersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new UsersApi(apiClient);
    }

    /**
     * Remove User From Workspace
     *
     * Deactivate a user from a Workspace. \\  \\ ***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deactivateFromWorkspaceTest() throws ApiException {
        Double teamId = null;
        Double userId = null;
        RemoveUserFromWorkspaceresponse response = api.deactivateFromWorkspace(teamId, userId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get User
     *
     * View information about a user in a Workspace. \\  \\ ***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserDetailsTest() throws ApiException {
        Double teamId = null;
        Double userId = null;
        GetUserresponse response = api.getUserDetails(teamId, userId)
                .execute();
        // TODO: test validations
    }

    /**
     * Invite User To Workspace
     *
     * Invite someone to join your Workspace as a member. To invite someone as a guest, use the [Invite Guest](https://clickup.com/api/clickupreference/operation/InviteGuestToWorkspace/) endpoint.\\  \\ ***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inviteUserToWorkspaceTest() throws ApiException {
        String email = null;
        Boolean admin = null;
        Double teamId = null;
        Integer customRoleId = null;
        InviteUserToWorkspaceresponse response = api.inviteUserToWorkspace(email, admin, teamId)
                .customRoleId(customRoleId)
                .execute();
        // TODO: test validations
    }

    /**
     * Edit User On Workspace
     *
     * Update a user&#39;s name and role. \\  \\ ***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateUserDetailsTest() throws ApiException {
        String username = null;
        Boolean admin = null;
        Integer customRoleId = null;
        Double teamId = null;
        Double userId = null;
        EditUserOnWorkspaceresponse response = api.updateUserDetails(username, admin, customRoleId, teamId, userId)
                .execute();
        // TODO: test validations
    }

}
